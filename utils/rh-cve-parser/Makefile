
image_version = 20230212.2
create_req_file:
	pip freeze > requirements.txt
build_container:
	docker build -t phiroict/rh_cve_parser_aro:$(image_version) -f infra/local/Dockerfile .
run:
	cd src && python rh-cve-parser.py
push_container:
	docker push phiroict/rh_cve_parser_aro:$(image_version)
tag_push_container:
	# Since there is no way to get the credentials for this as that would spoil the fun for the support we need to replace this later on. 
	docker tag phiroict/rh_cve_parser_aro:$(image_version) default-route-openshift-image-registry.apps-crc.testing/phiroict/rh_cve_parser_aro:$(image_version)
	docker push default-route-openshift-image-registry.apps-crc.testing/phiroict/rh_cve_parser_aro:$(image_version)
run_container:
	-mkdir -p result_container
	docker run -v ./result_container:/src/result -ti phiroict/rh_cve_parser_aro:$(image_version)
create_ns:
	cd infra/openshift && oc create namespace cves --dry-run=client -o yaml > ns.yaml
create_cron:
	cd infra/openshift && oc create cronjob cve-parser --image phiroict/rh_cve_parser_aro:$(image_version)  --schedule "*/1 * * * * " -n cves --dry-run -o yaml > cron.yaml
build_oc_stack:
	cd infra/openshift && oc apply -f ns.yaml
	cd infra/openshift && oc apply -f limitrange.yaml
	cd infra/openshift && oc apply -f cron.yaml
oc_cron_patch:
	cd infra/openshift && oc patch -f cron.yaml --local=true --type=json -p='[{"op":"replace", "path": "/spec/jobTemplate/spec/template/spec/containers/0/image", "value":"phiroict/rh_cve_parser_aro:$(image_version)"}]' --dry-run=client -o yaml > cron.yaml_new
	cd infra/openshift && mv cron.yaml_new cron.yaml

oc_build_deploy: build_container push_container oc_cron_patch build_oc_stack
